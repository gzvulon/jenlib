# https://taskfile.dev

version: '2'

vars:
  GREETING: JenkinsDockers

tasks:
  default:
    cmds:
      - echo "{{.GREETING}}"
      - task -l
    silent: true

  docker:build:jenmaster:
    desc: _
    cmds:
      - docker build . -t jenmaster

  docker:build:jenconda:
    desc: _
    deps:
      - docker:build:jenmaster
    cmds:
      - docker build -f install.scripts/install-conda-in-docker.Dockerfile  -t jenconda install.scripts

  docker:build:
    desc: _
    deps:
      - docker:build:jenconda

  docker:run:prod:
    desc: _
    cmds:
      - docker rm -f jenconda_c || true
      - test -d /opt/dockers-data || sudo mkdir -p /opt/dockers-data && sudo chmod -R 777 /opt/dockers-data
      - test -d /opt/dockers-data/jenkins_home || sudo mkdir -p /opt/dockers-data/jenkins_home && sudo chmod -R 777 /opt/dockers-data/jenkins_home
      - |
        docker run \
        --name jenconda_c \
        -d \
        -p 8880:8080 \
        -p 58000:50000 \
        -v /opt/dockers-data/jenkins_home:/var/jenkins_home:rw \
        -v /var/run/docker.sock:/var/run/docker.sock \
        jenconda

  docker:run:dev:
    desc: _
    cmds:
      - docker rm -f jenconda_c_dev || true
      - test -d /opt/dockers-data || (sudo mkdir -p /opt/dockers-data && sudo chmod -R 777 /opt/dockers-data)
      - test -d /opt/dockers-data/jenkins_home_dev || (sudo mkdir -p /opt/dockers-data/jenkins_home_dev && sudo chmod -R 777 /opt/dockers-data/jenkins_home_dev)
      - |
        docker run \
        --name jenconda_c_dev \
        -d \
        -p 8830:8080 \
        -p 58300:50000 \
        -v /opt/dockers-data/jenkins_home_dev:/var/jenkins_home:rw \
        -v /var/run/docker.sock:/var/run/docker.sock \
        -v $(realpath ~):/var/userhome:ro \
        -v $(realpath ../..):/var/jenlib_repo:ro \
        jenconda

  docker:run:test:init:
    desc: _
    vars:
      VOLUME_NAME: {sh: echo "jenconda_v_dtest"}
      DEMONIZE: -d
    cmds:
      # - docker volume rm {{.VOLUME_NAME}}|| true
      - docker rm -f jenconda_c_dtest || true
      - docker volume create {{.VOLUME_NAME}} || true
      # -d \
      - |
        docker run \
        --name jenconda_c_dtest \
        -d \
        -p 18808:8080 \
        -p 18500:50000 \
        -v /var/run/docker.sock:/var/run/docker.sock \
        -v {{.VOLUME_NAME}}:/var/jenkins_home:rw \
        -v $(realpath ~):/var/userhome:ro \
        -v $(realpath ../..):/var/jenlib_repo:ro \
        jenconda
      - ./wait-for-it.sh localhost:18808
      - echo access "http://localhost:18808"

  docker:run:test:flow:
    desc: _
    cmds:
      - ./wait-for-it.sh localhost:18808

  docker:run:test:full:
    desc: _
    cmds:
      - task docker:run:test:init
      - task docker:run:test:flow




  docker:clean:data:
    desc: _
    cmds:
      - rm -rf ~/jenkins_home/* ~/jenkins_home/.*

  install:jcli:
    desc: _
    cmds:
      - which brew && brew install jcli || true
      - |
        which brew \
        || curl -L https://github.com/jenkins-zh/jenkins-cli/releases/latest/download/jcli-linux-amd64.tar.gz|tar xzv \
        && sudo mv jcli /usr/local/bin/

  shapshot:update:
    desc: _
    cmds:
      - jcli plugin list > install.snapshots/snapshot_2020-05-20--00-40-45/jcli_plugin_list.org.tsv

  dm:sync:
    desc: _
    vars:
      jentest_machine: {sh: cat e2e/cfg/_machine.name.txt}
    cmds:
      - |
        docker-machine scp -r . {{.jentest_machine}}:/home/docker/_jm

  dm:ssh:
    desc: _
    vars:
      jentest_machine: {sh: cat e2e/cfg/_machine.name.txt}
    cmds:
      - |
        docker-machine ssh {{.jentest_machine}}

  show-plugins-from:
    desc: _
    vars:
      target: install.snapshots/snapshot_2020-05-20--00-40-45
    cmds:
      # - |
      #   cat "{{.target}}/jcli_plugin_list.org.tsv" \
      #   | python -c "
      #   import fileinput
      #   for line in fileinput.input():print(':'.join(line.split()[:2]))
      #   "
      - |
        cat "{{.target}}/jcli_plugin_list.org.tsv" \
        | python -c "import fileinput; \
        set(map( \
          lambda x: print(':'.join(x.split()[:2])), \
          list(fileinput.input())[1:])) \
        "
    silent: yes

  gen-plugins-from:
    desc: _
    cmds:
      - task show-plugins-from > plugins.txt 2>&1

      # - cat "{{.target}}/jcli_plugin_list.org.tsv" | sed 's/ false/blas/'
      # - cat "{{.target}}/jcli_plugin_list.org.tsv" | python -c "print(x.split()"